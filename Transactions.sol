
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 * The file was created as a solution for the task:
 * Create "wallet" file with some methods.
 * created by AmOglock 
 * amoglock@gmail.com
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

contract Transactions {

   // Contract constructor.
   constructor() public {
      require(tvm.pubkey() != 0, 101);
      require(msg.pubkey() == tvm.pubkey(), 102);
      tvm.accept();
   }


   // Modifier that allows function to accept external call only if it was signed
   // with contract owner's public key.
   modifier checkOwnerAndAccept {
      require(msg.pubkey() == tvm.pubkey(), 100);
      tvm.accept();
	_;
	}

   // Transfer function and commission at my expense.
   // You will pay a commission for the transfer.
   function sendTransaction(address dest, uint128 amount) public pure checkOwnerAndAccept {
      dest.transfer(amount, true, 1);
   }

   // Transfer function and you pay the commission.
   // The commission will be paid from the transfer amount.
   function freeTransaction(address dest, uint128 amount) public pure checkOwnerAndAccept {
      dest.transfer(amount, true, 0);
   }

   // All in and destroy contract function.
   // Your entire balance will be sent to the address you specify, the "amount" parameter will be ignored. Then your account will be destroyed.
   function allIn(address dest, uint128 amount) public pure checkOwnerAndAccept  {
      dest.transfer(amount, false, 160);
   }
}
